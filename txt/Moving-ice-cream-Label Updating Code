import javafx.animation.PathTransition;
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.layout.BorderPane;
//import javafx.scene.image.Image;
//import javafx.scene.image.ImageView;
import javafx.scene.layout.Pane;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Line;
import javafx.stage.Stage;
import javafx.util.Duration;

public class MovingIceCream extends Application {
	private int paneWidth = 700;
	private int paneHeight = 600;
	private int x1, y1, x2, y2, speed;
	private int score = 0;
	
		@Override // Override the start method in the Application class
		public void start(Stage primaryStage) {
			
			//(new) creates a Label that displays/stores the int variable score
			Label lblScore = new Label("Score: " + score);
			
			//(new) creates a BorderPane
			BorderPane borderPane = new BorderPane();
			
			//(new) places the lblScore at the bottom left of the window
			borderPane.setBottom(lblScore);
			
			
			//(new) Create a pane
			Pane pane = new Pane();
			
			//(new) adds pane to borderPane
			borderPane.getChildren().add(pane);
			
			// Add picture of an ice cream to the pane
			/*Image image = new Image("ice-cream.jpg");
			ImageView imageView = new ImageView(image);*/
			
			//(new/supplement to image) creates a circle and places it in pane
			Circle circle = new Circle(20, 20, 20);
			pane.getChildren().add(circle);
			
			/*
			// Ice cream comes in from top edge, random line path to opposite side 
			x1 = (int)(Math.random()*(paneWidth+1));
			y1 = 0;
			x2 = (int)(Math.random()*(paneWidth+1));
			y2 = paneHeight+50;
			
			
			// Ice cream comes in from bottom edge, random line path to opposite side 
			x1 = (int)(Math.random()*(paneWidth+1));
			y1 = paneHeight;
			x2 = (int)(Math.random()*(paneWidth+1));
			y2 = 0-50;
			*/
				
			// Ice cream comes in from the left side edge, random line path to opposite side 
			x1 = 10;
			y1 = (int)(Math.random()*(paneHeight+1));
			x2 = paneWidth + 50;
			y2 = (int)(Math.random()*(paneHeight+1));
			
			/*
			// Ice cream comes in from the right side edge, random line path to opposite side 
			x1 = paneWidth+10;
			y1 = (int)(Math.random()*(paneHeight+1));
			x2 = 0-50;
			y2 = (int)(Math.random()*(paneHeight+1));
			*/
									
			/* Randomize the speed */
			speed = (int)(Math.random()* 3000) + 500;
			
			// Create a path transition
			PathTransition ptCircle = new PathTransition(Duration.millis(speed), new Line(x1, y1, x2, y2), circle);
			ptCircle.play();
			
			
			//(new) event handling for mouse presses
			circle.setOnMousePressed(e -> {
				pane.getChildren().remove(circle);
				
				/* might not even need because setText is either covering the
				 * values with the updated values or is actually removing and 
				 * updating the lblScore string on its own.
				 */
				borderPane.getChildren().remove(lblScore);
				score++;
				// String to replace/update the previous string in lblScore
				String stringScore = "Score: " + score;
				// updates the text with stringScore
				lblScore.setText(stringScore);
				borderPane.setBottom(lblScore);
			});
					
					
			// Create a scene and place it in the stage
			Scene scene = new Scene(/*new was 'pane'*/borderPane, paneWidth,
					paneHeight);
			primaryStage.setTitle("Moving Circle");  // Set the stage title
			primaryStage.setScene(scene);  // Place the scene in the stage
			primaryStage.show();  // Display the stage
			
		}				
				
		public static void main(String [] args) {
			launch();
		}

}
